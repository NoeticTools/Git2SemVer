<?xml version="1.0" encoding="utf-8"?>

<Project>

  <PropertyGroup>
    <_Git2SemVerRuntTimeFramework Condition=" '$(_Git2SemVerRuntTimeFramework)' == '' ">netstandard2.0</_Git2SemVerRuntTimeFramework>
    <Git2SemVerTasksAssembly Condition="'$(Git2SemVerTasksAssembly)' == ''">$([MSBuild]::EnsureTrailingSlash($(MSBuildThisFileDirectory)..\tasks\$(_Git2SemVerRuntTimeFramework)))NoeticTools.Git2SemVer.MSBuild.dll</Git2SemVerTasksAssembly>
    <Git2SemVer_IntermediateOutputPath Condition="'$(Git2SemVer_IntermediateOutputPath)' == '' ">$(BaseIntermediateOutputPath)</Git2SemVer_IntermediateOutputPath>
    <Git2SemVer_VersionCacheDirectory Condition="'$(Git2SemVer_Mode)'=='StandAloneProject'">$(BaseIntermediateOutputPath)</Git2SemVer_VersionCacheDirectory>
    <Git2SemVer_VersionCacheDirectory Condition="'$(Git2SemVer_VersionCacheDirectory)'==''">$(Git2SemVer_ShareDirectory)</Git2SemVer_VersionCacheDirectory>
  </PropertyGroup>

  <UsingTask TaskName="NoeticTools.Git2SemVer.MSBuild.Tasks.Git2SemVerGenerateVersionTask"
             AssemblyFile="$(Git2SemVerTasksAssembly)" />

  <Target Name="Git2SemVerGenerateVersionTask"
          BeforeTargets="$(Git2SemVerBeforeTargets)"
          Condition="'$(Git2SemVer_Disable)' == 'false'">

    <!-- Generate version information -->

    <Git2SemVerGenerateVersionTask Input_BuildNumber="$(Git2SemVer_BuildNumber)"
                                   Input_BuildContext="$(Git2SemVer_BuildContext)"
                                   Input_BuildIDFormat="$(Git2SemVer_BuildIDFormat)"
                                   Input_Version="$(Version)"
                                   Input_UpdateHostBuildLabel="$(Git2SemVer_UpdateHostBuildLabel)"
                                   Input_ScriptArgs="$(Git2SemVer_ScriptArgs)"
                                   Input_HostType="$(Git2SemVer_HostType)"
                                   Input_BuildScriptPath="$(Git2SemVer_ScriptPath)"
                                   Input_BranchMaturityPattern="$(Git2SemVer_BranchMaturityPattern)"
                                   Input_Env_WorkingDirectory="$(MSBuildProjectDirectory)"
                                   Input_Env_SharedDirectory="$(Git2SemVer_ShareDirectory)"
                                   Input_Env_SharedVersioningPropsFile="$(Git2SemVer_SharedVersioningJsonFile)"
                                   Input_Env_IntermediateOutputDirectory="$(Git2SemVer_IntermediateOutputPath)"
                                   Input_Env_Mode="$(Git2SemVer_Mode)">

      <Output TaskParameter="Output_AssemblyVersion" PropertyName="Git2SemVer_AssemblyVersion" />
      <Output TaskParameter="Output_CommitsSinceLastRelease" PropertyName="Git2SemVer_CommitsSinceLastRelease" />
      <Output TaskParameter="Output_FileVersion" PropertyName="Git2SemVer_FileVersion" />
      <Output TaskParameter="Output_InformationalVersion" PropertyName="Git2SemVer_InformationalVersion" />
      <Output TaskParameter="Output_PackageVersion" PropertyName="Git2SemVer_PackageVersion" />
      <Output TaskParameter="Output_Version" PropertyName="Git2SemVer_Version" />
      <Output TaskParameter="Output_VersionPrefix" PropertyName="Git2SemVer_VersionPrefix" />
      <Output TaskParameter="Output_VersionSuffix" PropertyName="Git2SemVer_VersionSuffix" />
      <Output TaskParameter="Output1" PropertyName="Git2SemVer_Output1" />
      <Output TaskParameter="Output2" PropertyName="Git2SemVer_Output2" />

    </Git2SemVerGenerateVersionTask>

    <PropertyGroup>
      <Version Condition=" '$(Git2SemVer_Version)' != '' ">$(Git2SemVer_Version)</Version>
      <VersionPrefix Condition=" '$(Git2SemVer_VersionPrefix)' != '' ">$(Git2SemVer_VersionPrefix)</VersionPrefix>
      <VersionSuffix Condition=" '$(Git2SemVer_VersionSuffix)' != '' ">$(Git2SemVer_VersionSuffix)</VersionSuffix>
      <PackageVersion Condition=" '$(Git2SemVer_PackageVersion)' != '' ">$(Git2SemVer_PackageVersion)</PackageVersion>
      <InformationalVersion Condition=" '$(Git2SemVer_InformationalVersion)' != '' ">$(Git2SemVer_InformationalVersion)</InformationalVersion>
      <AssemblyVersion Condition=" '$(Git2SemVer_AssemblyVersion)' != '' ">$(Git2SemVer_AssemblyVersion)</AssemblyVersion>
      <FileVersion Condition=" '$(Git2SemVer_FileVersion)' != '' ">$(Git2SemVer_FileVersion)</FileVersion>
    </PropertyGroup>

    <Touch Files="$(Git2SemVer_GeneratedVersionStamp)" AlwaysCreate="True" />

  </Target>

  <!-- Restore version propeties from file so that we can pack without rebuild. -->

  <UsingTask TaskName="NoeticTools.Git2SemVer.MSBuild.Tasks.Git2SemVerRestoreVersionPropertiesTask"
             AssemblyFile="$(Git2SemVerTasksAssembly)" />

  <Target Name="Git2SemVerRestoreVersionPropertiesTask"
          BeforeTargets="$(Git2SemVerRestorePropertiesBeforeTargets)"
          Inputs="$(Git2SemVer_GeneratedVersionStamp)"
          Outputs="$(Git2SemVer_RestoredPropertiesStamp)"
          Condition="'$(Git2SemVer_Disable)' == 'false'">

    <Git2SemVerRestoreVersionPropertiesTask Input_VersionCacheDirectory="$(Git2SemVer_VersionCacheDirectory)">

      <Output TaskParameter="Output_AssemblyVersion" PropertyName="Git2SemVer_AssemblyVersion" />
      <Output TaskParameter="Output_CommitsSinceLastRelease" PropertyName="Git2SemVer_CommitsSinceLastRelease" />
      <Output TaskParameter="Output_FileVersion" PropertyName="Git2SemVer_FileVersion" />
      <Output TaskParameter="Output_InformationalVersion" PropertyName="Git2SemVer_InformationalVersion" />
      <Output TaskParameter="Output_PackageVersion" PropertyName="Git2SemVer_PackageVersion" />
      <Output TaskParameter="Output_Version" PropertyName="Git2SemVer_Version" />
      <Output TaskParameter="Output_VersionPrefix" PropertyName="Git2SemVer_VersionPrefix" />
      <Output TaskParameter="Output_VersionSuffix" PropertyName="Git2SemVer_VersionSuffix" />
      <Output TaskParameter="Output1" PropertyName="Git2SemVer_Output1" />
      <Output TaskParameter="Output2" PropertyName="Git2SemVer_Output2" />

    </Git2SemVerRestoreVersionPropertiesTask>

    <PropertyGroup>
      <Version Condition=" '$(Git2SemVer_Version)' != '' ">$(Git2SemVer_Version)</Version>
      <VersionPrefix Condition=" '$(Git2SemVer_VersionPrefix)' != '' ">$(Git2SemVer_VersionPrefix)</VersionPrefix>
      <VersionSuffix Condition=" '$(Git2SemVer_VersionSuffix)' != '' ">$(Git2SemVer_VersionSuffix)</VersionSuffix>
      <PackageVersion Condition=" '$(Git2SemVer_PackageVersion)' != '' ">$(Git2SemVer_PackageVersion)</PackageVersion>
      <InformationalVersion Condition=" '$(Git2SemVer_InformationalVersion)' != '' ">$(Git2SemVer_InformationalVersion)</InformationalVersion>
      <AssemblyVersion Condition=" '$(Git2SemVer_AssemblyVersion)' != '' ">$(Git2SemVer_AssemblyVersion)</AssemblyVersion>
      <FileVersion Condition=" '$(Git2SemVer_FileVersion)' != '' ">$(Git2SemVer_FileVersion)</FileVersion>
    </PropertyGroup>

    <Touch Files="$(Git2SemVer_RestoredPropertiesStamp)" AlwaysCreate="True" />

  </Target>

</Project>